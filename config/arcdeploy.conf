# ArcDeploy Central Configuration
# This file contains all configurable parameters for ArcDeploy deployment

# ============================================================================
# BASIC CONFIGURATION
# ============================================================================

# Project Information
PROJECT_NAME="ArcDeploy"
PROJECT_VERSION="4.0.5"
DEPLOYMENT_TYPE="native"

# User Configuration
USER_NAME="arcblock"
USER_HOME="/home/arcblock"
USER_GROUPS="users,admin,sudo"

# ============================================================================
# DIRECTORY CONFIGURATION
# ============================================================================

# Application Directories
BLOCKLET_BASE_DIR="/opt/blocklet-server"
BLOCKLET_DATA_DIR="/opt/blocklet-server/data"
BLOCKLET_CONFIG_DIR="/opt/blocklet-server/config"
BLOCKLET_LOGS_DIR="/opt/blocklet-server/logs"
BLOCKLET_BIN_DIR="/opt/blocklet-server/bin"

# Log Files (will use /tmp/ if not running as root)
SETUP_LOG="${SETUP_LOG:-/var/log/arcblock-setup.log}"
HEALTH_LOG="${HEALTH_LOG:-/opt/blocklet-server/logs/health.log}"

# ============================================================================
# NETWORK CONFIGURATION
# ============================================================================

# SSH Configuration
SSH_PORT="2222"
SSH_MAX_AUTH_TRIES="3"
SSH_MAX_SESSIONS="10"
SSH_CLIENT_ALIVE_INTERVAL="300"
SSH_CLIENT_ALIVE_COUNT_MAX="2"
SSH_LOGIN_GRACE_TIME="60"

# Blocklet Server Ports
BLOCKLET_HTTP_PORT="8080"
BLOCKLET_HTTPS_PORT="8443"
BLOCKLET_HOST="0.0.0.0"

# Nginx Proxy Ports
NGINX_HTTP_PORT="80"
NGINX_HTTPS_PORT="443"

# Redis Configuration
REDIS_PORT="6379"
REDIS_HOST="127.0.0.1"

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================

# Fail2ban Settings
FAIL2BAN_BANTIME="3600"
FAIL2BAN_FINDTIME="600"
FAIL2BAN_MAXRETRY="5"
FAIL2BAN_SSH_MAXRETRY="5"
FAIL2BAN_HTTP_MAXRETRY="6"

# UFW Firewall Ports (space-separated)
UFW_ALLOWED_PORTS="$SSH_PORT $BLOCKLET_HTTP_PORT $BLOCKLET_HTTPS_PORT $NGINX_HTTP_PORT $NGINX_HTTPS_PORT"

# System Security
DISABLE_ROOT_LOGIN="yes"
DISABLE_PASSWORD_AUTH="yes"
ENABLE_KEY_AUTH="yes"

# ============================================================================
# SYSTEM OPTIMIZATION
# ============================================================================

# Resource Limits
NOFILE_SOFT_LIMIT="65536"
NOFILE_HARD_LIMIT="65536"
NPROC_SOFT_LIMIT="32768"
NPROC_HARD_LIMIT="32768"

# Network Tuning
NET_CORE_RMEM_MAX="134217728"
NET_CORE_WMEM_MAX="134217728"
NET_CORE_NETDEV_MAX_BACKLOG="5000"

# ============================================================================
# SOFTWARE VERSIONS
# ============================================================================

# Node.js Configuration
NODEJS_VERSION="lts"
NODEJS_REPO_URL="https://deb.nodesource.com/setup_lts.x"

# Blocklet CLI
BLOCKLET_CLI_PACKAGE="@blocklet/cli"
BLOCKLET_CLI_VERSION="latest"

# ============================================================================
# MONITORING CONFIGURATION
# ============================================================================

# Health Check Settings
HEALTH_CHECK_INTERVAL="5"  # minutes
HEALTH_CHECK_MAX_ATTEMPTS="12"
HEALTH_CHECK_SLEEP_INTERVAL="10"  # seconds
HEALTH_CHECK_TIMEOUT="10"  # seconds

# Resource Monitoring Thresholds
DISK_USAGE_WARNING_THRESHOLD="85"  # percentage
MEMORY_USAGE_WARNING_THRESHOLD="85"  # percentage

# Service Restart Settings
SERVICE_RESTART_DELAY="10"  # seconds
SERVICE_MAX_RESTART_ATTEMPTS="3"

# ============================================================================
# DEPLOYMENT SETTINGS
# ============================================================================

# Cloud-Init Settings
CLOUD_INIT_TIMEOUT="600"  # seconds
PACKAGE_UPDATE="true"
PACKAGE_UPGRADE="true"
PACKAGE_REBOOT_IF_REQUIRED="false"

# Installation Timeouts
NODE_INSTALL_TIMEOUT="300"  # seconds
BLOCKLET_INSTALL_TIMEOUT="300"  # seconds
SERVICE_START_TIMEOUT="120"  # seconds

# ============================================================================
# ENVIRONMENT VARIABLES
# ============================================================================

# Blocklet Server Environment
NODE_ENV="production"
BLOCKLET_LOG_LEVEL="info"
BLOCKLET_DATA_DIR_ENV="$BLOCKLET_DATA_DIR"
BLOCKLET_CONFIG_DIR_ENV="$BLOCKLET_CONFIG_DIR"

# ============================================================================
# BACKUP CONFIGURATION
# ============================================================================

# Backup Paths
BACKUP_CONFIG_PATHS="$BLOCKLET_CONFIG_DIR /etc/nginx/sites-available /etc/ssh/sshd_config"
BACKUP_DATA_PATHS="$BLOCKLET_DATA_DIR"
BACKUP_LOG_PATHS="$BLOCKLET_LOGS_DIR"

# ============================================================================
# CLOUD PROVIDER SPECIFIC SETTINGS
# ============================================================================

# Hetzner Cloud (default)
HETZNER_DEFAULT_LOCATION="nbg1"
HETZNER_MIN_SERVER_TYPE="cx31"
HETZNER_RECOMMENDED_SERVER_TYPE="cx41"

# AWS EC2 (optional)
AWS_DEFAULT_REGION="us-east-1"
AWS_MIN_INSTANCE_TYPE="t3.large"
AWS_RECOMMENDED_INSTANCE_TYPE="t3.xlarge"

# ============================================================================
# FEATURE FLAGS
# ============================================================================

# Optional Features
ENABLE_NGINX_PROXY="true"
ENABLE_REDIS_BACKEND="true"
ENABLE_FAIL2BAN="true"
ENABLE_UFW_FIREWALL="true"
ENABLE_HEALTH_MONITORING="true"
ENABLE_AUTO_UPDATES="true"
ENABLE_SSH_HARDENING="true"

# SSL/TLS Configuration
ENABLE_SSL="false"  # Set to true for production with domain
SSL_PROVIDER="letsencrypt"  # letsencrypt, self-signed, custom
SSL_EMAIL=""  # Required for Let's Encrypt

# ============================================================================
# DEVELOPMENT SETTINGS
# ============================================================================

# Debug Mode
DEBUG_MODE="false"
VERBOSE_LOGGING="false"
KEEP_TEMP_FILES="false"

# Testing Configuration
ENABLE_VALIDATION="true"
ENABLE_HEALTH_CHECKS="true"
SKIP_SERVICE_RESTART="false"

# ============================================================================
# COMPATIBILITY SETTINGS
# ============================================================================

# Operating System Support
SUPPORTED_OS="ubuntu-22.04 ubuntu-20.04 debian-12"
PRIMARY_OS="ubuntu-22.04"

# Architecture Support
SUPPORTED_ARCH="x86_64 arm64"
PRIMARY_ARCH="x86_64"

# ============================================================================
# ADVANCED CONFIGURATION
# ============================================================================

# Performance Tuning
ENABLE_PERFORMANCE_TUNING="true"
ENABLE_SYSTEM_OPTIMIZATION="true"
ENABLE_NETWORK_TUNING="true"

# Security Hardening
ENABLE_KERNEL_HARDENING="true"
ENABLE_PROCESS_ISOLATION="true"
ENABLE_FILE_PERMISSIONS_HARDENING="true"

# ============================================================================
# VALIDATION RULES
# ============================================================================

# Minimum System Requirements
MIN_RAM_GB="4"
MIN_DISK_GB="40"
MIN_CPU_CORES="2"

# Recommended System Requirements
REC_RAM_GB="8"
REC_DISK_GB="80"
REC_CPU_CORES="4"

# Network Requirements
REQUIRED_BANDWIDTH_MBPS="10"
RECOMMENDED_BANDWIDTH_MBPS="100"

# ============================================================================
# END OF CONFIGURATION
# ============================================================================

# Note: This configuration file is sourced by all ArcDeploy scripts
# Modify values above to customize your deployment
# For cloud-provider specific overrides, see config/providers/